[{"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/index.tsx":"1","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/App.tsx":"2","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/data/timezonedata.js":"3","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/reportWebVitals.ts":"4","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/About.tsx":"5","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/Support.tsx":"6","/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/ContactUs.tsx":"7"},{"size":928,"mtime":1613483588483,"results":"8","hashOfConfig":"9"},{"size":8327,"mtime":1613553693939,"results":"10","hashOfConfig":"9"},{"size":26933,"mtime":1613479459291,"results":"11","hashOfConfig":"9"},{"size":425,"mtime":1613481372853,"results":"12","hashOfConfig":"9"},{"size":109,"mtime":1613483865482,"results":"13","hashOfConfig":"9"},{"size":115,"mtime":1613484256965,"results":"14","hashOfConfig":"9"},{"size":119,"mtime":1613484250780,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18ee57n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/index.tsx",[],["32","33"],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/App.tsx",["34","35","36","37"],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/data/timezonedata.js",[],["38","39"],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/reportWebVitals.ts",[],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/About.tsx",[],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/Support.tsx",[],"/Users/abhishek/Documents/Abhishek/Dev/Web/reactJS/local-local-time/src/pages/ContactUs.tsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":22,"column":10,"nodeType":"46","messageId":"47","endLine":22,"endColumn":22},{"ruleId":"48","severity":1,"message":"49","line":83,"column":34,"nodeType":"50","messageId":"51","endLine":83,"endColumn":36},{"ruleId":"52","severity":1,"message":"53","line":123,"column":22,"nodeType":"54","endLine":123,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":259,"column":9,"nodeType":"57","endLine":259,"endColumn":95},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'downloadLink' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Assignments to the 'currentTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]